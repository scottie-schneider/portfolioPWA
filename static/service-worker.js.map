{"version":3,"file":"service-worker.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","../../../../private/var/folders/qy/mq32v1jj5c92nhfh0bwz281w0000gn/T/31b83ed763951cc5a70568a58ff15a06/service-worker.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.0.0-rc.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-in-sw': ({ moduleName }) => {\n        if (!moduleName) {\n            throw new Error(`Unexpected input to 'not-in-sw' error.`);\n        }\n        return `The '${moduleName}' must be used in a service worker.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `is unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        let message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method returns true if the current context is a service worker.\n */\nconst isSWEnv = (moduleName) => {\n    if (!('ServiceWorkerGlobalScope' in self)) {\n        throw new WorkboxError('not-in-sw', { moduleName });\n    }\n};\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (let item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isSWEnv,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.0.0-rc.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox.routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox.routing.Route~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox.routing.Route~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minifification.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link workbox.routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof workbox.routing\n * @extends workbox.routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regulard expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * th ecaptured values will be passed to the\n     * [handler's]{@link workbox.routing.Route~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox.routing.Route~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    if (urlObj.origin === location.origin) {\n        return urlObj.pathname;\n    }\n    return urlObj.href;\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link workbox.routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox.routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox.routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        let { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        let debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            // The Request and Response objects contains a great deal of information,\n            // hide it under a group in case developers want to see it.\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            let matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox.routing.Route~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox.routing.Route~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox.routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox.routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [Router.registerRoute()]{@link\n * workbox.routing.Router#registerRoute}.\n *\n * @param {\n * RegExp|\n * string|\n * workbox.routing.Route~matchCallback|\n * workbox.routing.Route\n * } capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox.routing.Route~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox.routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @alias workbox.routing.registerRoute\n */\nexport const registerRoute = (capture, handler, method) => {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (valueToCheck.match(new RegExp(`${wildcards}`))) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: registration.scope,\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox.core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.0.0-rc.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox.expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox.expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox.strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            let isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox.strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:5.0.0-rc.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof workbox.cacheableResponse\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox.cacheableResponse\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox.core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    let responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    let oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (let plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (let plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (let plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = (await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    let pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.0.0-rc.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof workbox.strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link workbox.core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            let isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link workbox.routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (let log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @alias workbox.core.copyResponse\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\n;\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.0.0-rc.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        for (const entry of entries) {\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<workbox.precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<workbox.precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a workbox.cacheableResponse.CacheableResponsePlugin instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a {@link workbox.routing.Route}\n     * that will find a response for the incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {workbox.routing.Route~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request.url,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {workbox.routing.Route~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @alias workbox.precaching.addRoute\n */\nexport const addRoute = (options) => {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @alias workbox.precaching.precache\n */\nexport const precache = (entries) => {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        addEventListener('install', installListener);\n        addEventListener('activate', activateListener);\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @alias workbox.precaching.precacheAndRoute\n */\nexport const precacheAndRoute = (entries, options) => {\n    precache(entries);\n    addRoute(options);\n};\n","import {registerRoute as workbox_routing_registerRoute} from '/Users/scottie/Projects/portfolioSite/node_modules/workbox-routing/registerRoute.mjs';\nimport {ExpirationPlugin as workbox_expiration_ExpirationPlugin} from '/Users/scottie/Projects/portfolioSite/node_modules/workbox-expiration/ExpirationPlugin.mjs';\nimport {CacheableResponsePlugin as workbox_cacheable_response_CacheableResponsePlugin} from '/Users/scottie/Projects/portfolioSite/node_modules/workbox-cacheable-response/CacheableResponsePlugin.mjs';\nimport {NetworkFirst as workbox_strategies_NetworkFirst} from '/Users/scottie/Projects/portfolioSite/node_modules/workbox-strategies/NetworkFirst.mjs';\nimport {precacheAndRoute as workbox_precaching_precacheAndRoute} from '/Users/scottie/Projects/portfolioSite/node_modules/workbox-precaching/precacheAndRoute.mjs';/**\n * Welcome to your Workbox-powered service worker!\n *\n * You'll need to register this file in your web app.\n * See https://goo.gl/nhQhGp\n *\n * The rest of the code is auto-generated. Please don't update this file\n * directly; instead, make changes to your Workbox build configuration\n * and re-run your build process.\n * See https://goo.gl/2aRDsh\n */\n\n\n\n\n\n\n\n\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n\n\n\n/**\n * The precacheAndRoute() method efficiently caches and responds to\n * requests for URLs in the manifest.\n * See https://goo.gl/S9QRab\n */\nworkbox_precaching_precacheAndRoute([\n  {\n    \"url\": \"_next/static/chunks/0.js\",\n    \"revision\": \"019e8d55926f7fee330ac1dcd87009dc\"\n  },\n  {\n    \"url\": \"_next/static/chunks/0.js.map\",\n    \"revision\": \"27383de88abb73dd003a59677f67ce92\"\n  },\n  {\n    \"url\": \"_next/static/development/dll/dll_4b8bef20edde04f98d3f.js\",\n    \"revision\": \"02f5e802e965cec982d04f8ef3dad7a6\"\n  },\n  {\n    \"url\": \"_next/static/development/dll/dll_4b8bef20edde04f98d3f.js.map\",\n    \"revision\": \"31166de837d2cf1bff0db9efc891c830\"\n  },\n  {\n    \"url\": \"_next/static/development/pages/_app.js\",\n    \"revision\": \"df6a53d3bab76fc6b364aff6e2c1e90d\"\n  },\n  {\n    \"url\": \"_next/static/development/pages/_app.js.map\",\n    \"revision\": \"afd9df83228ad7754c47c2feaeb4b8f5\"\n  },\n  {\n    \"url\": \"_next/static/development/pages/_error.js\",\n    \"revision\": \"3a3374181cf9221ad5a250696691c84f\"\n  },\n  {\n    \"url\": \"_next/static/development/pages/_error.js.map\",\n    \"revision\": \"e0c8192967c9c7c7807feef4dce6befb\"\n  },\n  {\n    \"url\": \"_next/static/runtime/amp.js\",\n    \"revision\": \"304a4bf2e67af80116b6810132ab74b7\"\n  },\n  {\n    \"url\": \"_next/static/runtime/amp.js.map\",\n    \"revision\": \"1a25df666e6f6a7bf0454aab92745ed8\"\n  },\n  {\n    \"url\": \"_next/static/runtime/main.js\",\n    \"revision\": \"79f154e75a7af5645ee29a0915474e9d\"\n  },\n  {\n    \"url\": \"_next/static/runtime/main.js.map\",\n    \"revision\": \"304e07cd0f753292d8e5cb88580cc282\"\n  },\n  {\n    \"url\": \"_next/static/runtime/polyfills.js\",\n    \"revision\": \"3515d60e94de983fa5d1cf554dea0288\"\n  },\n  {\n    \"url\": \"_next/static/runtime/polyfills.js.map\",\n    \"revision\": \"53b05f82c1c25ac5fd17e2681b292ca2\"\n  },\n  {\n    \"url\": \"_next/static/runtime/webpack.js\",\n    \"revision\": \"93b42690e079ca5b0ace932807b2b0bf\"\n  },\n  {\n    \"url\": \"_next/static/runtime/webpack.js.map\",\n    \"revision\": \"e6b6103197f0e0ae66dd1e8b175b245c\"\n  },\n  {\n    \"url\": \"_next/static/webpack/50494ac5a340e9198673.hot-update.json\",\n    \"revision\": \"2ff28f4511e37616275abfb20130cea3\"\n  },\n  {\n    \"url\": \"_next/static/webpack/static/development/pages/_app.js.50494ac5a340e9198673.hot-update.js\",\n    \"revision\": \"4c9507f97d57baa349e246d251205fba\"\n  },\n  {\n    \"url\": \"_next/static/webpack/static/development/pages/_app.js.50494ac5a340e9198673.hot-update.js.map\",\n    \"revision\": \"205821c6ec4f352ddb65f709f63e5512\"\n  }\n], {});\n\n\n\n\nworkbox_routing_registerRoute(/^https?.*/, new workbox_strategies_NetworkFirst({ \"cacheName\":\"https-calls\",\"networkTimeoutSeconds\":15, plugins: [new workbox_expiration_ExpirationPlugin({ maxEntries: 150, maxAgeSeconds: 2592000, purgeOnQuotaError: true }), new workbox_cacheable_response_CacheableResponsePlugin({ statuses: [ 0, 200 ] })] }), 'GET');\n\n\n"],"names":["self","_","e","logger","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isSWEnv","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","RegExpRoute","regExp","RegExp","result","exec","href","origin","location","index","slice","getFriendlyURL","urlObj","URL","String","pathname","Router","_routes","Map","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","push","_defaultHandler","forEach","msg","err","reject","_catchHandler","catch","get","matchResult","length","undefined","setDefaultHandler","setCatchHandler","registerRoute","has","set","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","open","resolve","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","mode","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","put","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","CacheableResponse","statuses","_statuses","_headers","isResponseCacheable","response","Response","cacheable","some","headerName","logFriendlyHeaders","CacheableResponsePlugin","cacheWillUpdate","_cacheableResponse","executeQuotaErrorCallbacks","pluginUtils","plugins","callbackName","plugin","putWrapper","matchOptions","effectiveRequest","_getEffectiveRequest","responseToCache","_isResponseSafeToCache","updatePlugins","oldResponse","matchWrapper","call","newResponse","pluginMethod","pluginsUsed","cacheKeyWillBeUsedPlugins","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","strategyStart","strategyName","printFinalResponse","cacheOkAndOpaquePlugin","NetworkFirst","options","isUsingCacheWillUpdate","_plugins","_networkTimeoutSeconds","networkTimeoutSeconds","_fetchOptions","_matchOptions","logs","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","_respondFromCache","clearTimeout","responseClone","cachePut","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","cacheMode","integrity","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","precacheRequests","_addURLToCache","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","credentials","cacheWillUpdatePlugin","isValidResponse","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","urlsToCacheKeys","possibleURL","possibleCacheKey","precachedURL","listenerAdded","addRoute","precachePlugins","newPlugins","installListener","activateListener","precacheAndRoute","skipWaiting","workbox_precaching_precacheAndRoute","workbox_routing_registerRoute","workbox_strategies_NetworkFirst","workbox_expiration_ExpirationPlugin","workbox_cacheable_response_CacheableResponsePlugin"],"mappings":"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"}